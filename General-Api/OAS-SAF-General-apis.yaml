openapi: 3.0.3
info:
  title: "Standard API Framework"
  version: 1.0.0-preview
  description: >
    ## Security
    
    All endpoints except the techUserEnrolment are protected and a TechUser certificate (mTLS) or 
    bearer token must be provided. The certificate or oAuth2 credentials can be acquired using 
    the /techUserEnrolment endpoint.
    
    ## Changelog
    
    ### Version 1.0.0
      - SAFSupportedStandards
        - Renamed and restructured type to align with processName and processVersion in SAF events
      - Only allow application/json as content type
      - add version prefix to all endpoints
      - removed 404 response from /saf-receivers and /saf-insurers endpoint
      - correctly marked required attributes in all types
      - Enhanced documentation
    
    ### Version 0.3.1 (12.12.2024)
    
      - Enhanced documentation

    ### Version 0.3.0 (10.07.2024)
    
      - Initial public release
servers:
  - url: https://services.test-myecohub.ch/general/v1
    variables: {}
    description: EcoHub IAT Environment
  - url: https://services.myecohub.ch/general/v1
    variables: {}
    description: EcoHub PROD Environment
paths:
  /saf-receivers:
    post:
      tags:
        - "General APIs"
      summary: Get a list of available SAF receivers
      description: Retrieves a list of all available SAF receivers for this techUser,
        i.e. all receivers this TechUser has an active service agreement with.
      operationId: SafReceivers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralRequestData'
      responses:
        '200':
          description: Returns a list of available receivers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SAFReceiverResponse'
        '400':
          description: If saf-receiver operation is unsuccessful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAFErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralErrorResponse'
  /saf-insurers:
    post:
      tags:
        - "General APIs"
      summary: Get a list of all insurers on SAF.
      description: Returns a list of all insurers conntected to SAF including their supported processes and version, regardless of the existence of a service agreement.
      operationId: SafInsurers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralRequestData'
      responses:
        '200':
          description: Returns a list of all connected insurers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SAFInsurersResponse'
        '400':
          description: If saf-insurers operation is unsuccessful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAFErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralErrorResponse'
  /techUserEnrolment:
    post:
      tags:
        - "TechUser Enrollment"
      summary: Performs the TechUser enrolment.
      description: Enrolls the tech user and returns the tech user certificate and oAuth2 credentials necessary for other
        api calls.
      operationId: EnrolTechUser
      requestBody:
        content:
          application/json:
            schema:
              title: TechUserEnrolmentRequest
              allOf:
                - $ref: '#/components/schemas/TechUserEnrolmentRequest'
                - $ref: '#/components/schemas/GeneralRequestData'
      responses:
        '200':
          description: TechUser enrollment successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechUserEnrolmentResponse'
        '400':
          description: If TechUserEnrolment operation is unsuccessful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAFErrorResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralErrorResponse'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralErrorResponse'
components:
  schemas:
    GeneralRequestData:
      type: object
      properties:
        licenceKey:
          type: string
          description: The license key for the requesting application.
          example: fdsaf346t54grthe65euz467jhz7r
          maxLength: 200
        password:
          type: string
          description: The TechUser password.
          example: password
          maxLength: 100
        requestId:
          type: string
          example: 486ebf73-8306-4dd2-96bf-82ce4b15444f
          description: Unique request ID. Created by the caller of the API to help with troubleshooting.
        requestTime:
          type: string
          description: Date and time of the request at the client, formatted as YYYY-MM-DDThh:mm:ss RFC 3339 formatted datetime.
          format: date-time
        userAgent:
          $ref: '#/components/schemas/UserAgent'
      additionalProperties: false
      required:
        - licenceKey
        - password
        - requestId
        - requestTime
        - userAgent
    GeneralErrorResponse:
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/GeneralErrorReturnCode'
        errorMessageId:
          type: string
          format: uuid
          description: "Unique ID for the provided error message"
        errorMessage:
          type: string
          description: "Error message in english, that belongs to the errorMessageId"
          example: "The requested resource is not available"
      required:
        - errorCode
        - errorMessageId
        - errorMessage
      additionalProperties: false
    GeneralErrorReturnCode:
      enum:
        - ERROR
      type: string
      example: ERROR
    SAFInsurersResponse:
      type : object
      properties:
        companyName:
          type: string
          description: name of the insurer
          example: EcoHub Insurance Simulator
        supportedProcesses:
          $ref: '#/components/schemas/SupportedProcessesType'
      required:
        - companyName
        - supportedProcesses
    SAFErrorResponse:
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/SAFErrorReturnCode'
        errorMessage:
          type: string
          example: The given license key or password is invalid.
      additionalProperties: false
    SAFErrorReturnCode:
      enum:
        - LICENCE_KEY_OR_PASSWORD_INVALID
        - AUTH_FAILED
        - USER_NOT_FOUND
        - ERROR
      type: string
      example: LICENCE_KEY_OR_PASSWORD_INVALID
    SAFReceiverResponse:
      type : object
      properties:
        idp:
          type: array
          description: The IDP numbers of the receiver. When sending an event to this receiver, any of the
            returned IDP numbers can be used.
          items:
            type: string
            example: IDP234213
        companyName:
          type: string
          description: name of the company
          example: EcoHub Insurance Simulator
        memberType:
          description: Type of the receiver
          type: string
          example: Insurer
          enum:
            - Broker
            - Insurer
            - ServiceProvider
        supportedProcesses:
          $ref: '#/components/schemas/SupportedProcessesType'
      required:
        - idp
        - companyName
        - memberType
        - supportedProcesses
    SupportedProcessesType:
      description: The standards supported by the receiver.
      type: array
      items:
        type: object
        properties:
          processName:
            description: The identifier of the core process
            type: string
            enum:
              - offer.nlpi
              - Invoices
              - Commission
              - Contract
          processVersion:
            description: Version of the used core process
            type: string
            pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
            example: 0.5.1
        required:
          - processName
          - processVersion
    TechUserEnrolmentRequest:
      type: object
      properties:
        iak:
          type: string
          maxLength: 100
          description: The one-time activation code from the EcoHub SAF TechUser page
          example: "004321"
        idpUserId:
          type: string
          maxLength: 10
          description: The idp number of the TechUser.
          example: IDP9873467
      additionalProperties: false
      required:
        - iak
        - idpUserId
    TechUserEnrolmentResponse:
      type: object
      properties:
        techUserCert:
          description: "Base64 encoded .p12 certificate. The password for the certificate is the password for the tech user."
          type: string
          format: byte
        oAuth2:
          type: object
          properties:
            clientId:
              type: string
              description: OAuth2 clientId of the techUser
            clientSecret:
              type: string
              description: OAuth2 clientSecret of the techUser
            openIdConfigurationEndpoint:
              type: string
              description: well-known OpenID configuration URL
              format: url
          required:
            - clientId
            - clientSecret
            - openIdConfigurationEndpoint
      required:
        - techUserCert
        - oAuth2
    UserAgent:
      type: object
      description: The software which was used to make the request
      properties:
        name:
          type: string
          description: The name of the software
          example: Client software XYZ
          maxLength: 100
        version:
          type: string
          description: The version of the software
          example: Version 1.0
          maxLength: 30
      additionalProperties: false
      required:
        - name
        - version