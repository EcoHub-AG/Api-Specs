{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "description": "Offer NLPI error event, i.e. an event for errors which related to the event payload.",
  "type": "object",
  "properties": {
    "id": {
      "$ref": "CloudEventsType.json#/definitions/iddef",
      "description": "Identifies the event.",
      "examples": [
        "A234-1234-1234"
      ]
    },
    "source": {
      "$ref": "CloudEventsType.json#/definitions/sourcedef",
      "description": "Identifies the context in which an event happened.",
      "examples": [
        "http://www.igb2b.ch/offer/nlpi/0.2.0"
      ]
    },
    "specversion": {
      "$ref": "CloudEventsType.json#/definitions/specversiondef",
      "description": "The version of the CloudEvents specification which the event uses.",
      "examples": [
        "1.0"
      ]
    },
    "type": {
      "$ref": "event-generic/EventType.json",
      "description": "Describes the type of event related to the originating occurrence."
    },
    "datacontenttype": {
      "$ref": "CloudEventsType.json#/definitions/datacontenttypedef",
      "description": "Content type of the data value. Must adhere to RFC 2046 format.",
      "examples": [
        "text/xml",
        "application/json",
        "image/png",
        "multipart/form-data"
      ]
    },
    "dataschema": {
      "$ref": "CloudEventsType.json#/definitions/dataschemadef",
      "description": "Identifies the schema that data adheres to."
    },
    "subject": {
      "$ref": "CloudEventsType.json#/definitions/subjectdef",
      "description": "Describes the subject of the event in the context of the event producer (identified by source).",
      "examples": [
        "request"
      ]
    },
    "time": {
      "$ref": "CloudEventsType.json#/definitions/timedef",
      "description": "Timestamp of when the occurrence happened. Must adhere to RFC 3339.",
      "examples": [
        "2018-04-05T17:31:00Z"
      ]
    },
    "licenceKey": {
      "$ref": "event-generic/LicenseKeyType.json"
    },
    "userAgent": {
      "$ref": "event-generic/UserAgentType.json"
    },
    "data": {
      "$ref": "#/definitions/offerNLPIErrorType"
    },
    "eventReceiver": {
      "$ref": "event-generic/SenderReceiverType.json"
    },
    "eventSender": {
      "$ref": "event-generic/SenderReceiverType.json"
    },
    "processId": {
      "$ref": "event-generic/ProcessIdType.json"
    },
    "processName": {
      "$ref": "event-generic/ProcessNameType.json"
    },
    "processStatus": {
      "$ref": "event-generic/ProcessStatusType.json"
    },
    "subProcessName": {
      "$ref": "event-generic/SubProcessNameType.json"
    },
    "subProcessStatus": {
      "$ref": "event-generic/SubProcessStatusType.json"
    }
  },
  "definitions": {
    "offerNLPIErrorType": {
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "The payload needs to be first encrypted and afterwards gzipped. the base64 repesentation of gezipped bytes will be added as payload ",
          "minLength": 3,
          "type": "string",
          "enum": [
            "offer-missing-informations",
            "offer-incorrect-informations",
            "offer-date-expired",
            "offer-missing-claims-expierence",
            "offer-requested-several-times",
            "offer-already-issued",
            "offer-missing-documents",
            "offer-incorrect-attachment",
            "offer-other-error",
            "mandate-missing",
            "mandate-expired",
            "mandate-terminated",
            "mandate-invalid",
            "mandate-other-error",
            "cooperationagreement-missing",
            "cooperationagreement-expired-terminated",
            "cooperationagreement-other-error",
            "customer-data-referenceno-mismatch",
            "customer-data-incomplete",
            "customer-data-incorrect",
            "customer-not-identified",
            "customer-other-error",
            "claims-expierence-date-range-invalid",
            "claims-expierence-data-incorrect",
            "claims-expierence-contract-incorrect",
            "claims-expierence-customer-incorrect",
            "claims-expierence-other-error"
          ]
        },
        "errorMessage": {
          "description": "Error message",
          "minLength": 3,
          "type": "string"
        },
        "incorrectDataList": {
          "description": "List of JSON paths, where wrong information has been entered",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "errorDateTime": {
          "description": "Date and time of the error",
          "format": "date-time",
          "type": "string"
        },
        "missingDataList": {
          "description": "List of JSON paths, where information is missing",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "errorCode",
        "errorMessage",
        "errorDateTime"
      ],
      "allOf": [
        {
          "if": {
            "properties": {
              "errorCode": {
                "const": "offer-missing-informations"
              }
            }
          },
          "then": {
            "required": [
              "missingDataList"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "errorCode": {
                "const": "offer-incorrect-informations"
              }
            }
          },
          "then": {
            "required": [
              "incorrectDataList"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "errorCode": {
                "const": "offer-missing-claims-expierence"
              }
            }
          },
          "then": {
            "required": [
              "missingDataList"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "errorCode": {
                "const": "offer-missing-documents"
              }
            }
          },
          "then": {
            "required": [
              "missingDataList"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "errorCode": {
                "const": "offer-incorrect-attachment"
              }
            }
          },
          "then": {
            "required": [
              "incorrectDataList"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "errorCode": {
                "const": "customer-data-incomplete"
              }
            }
          },
          "then": {
            "required": [
              "missingDataList"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "errorCode": {
                "const": "customer-data-incorrect"
              }
            }
          },
          "then": {
            "required": [
              "incorrectDataList"
            ]
          }
        }
      ]
    }
  },
  "required": [
    "id",
    "source",
    "specversion",
    "type",
    "processId",
    "processName",
    "subProcessName",
    "processStatus",
    "subProcessStatus",
    "eventReceiver",
    "eventSender",
    "userAgent",
    "licenceKey"
  ]
}